workflows:
  ios-unsigned-workflow:
    name: iOS Unsigned Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - discord_credentials
      vars:
        XCODE_WORKSPACE: "FrameExtractionTool.xcodeproj"
        XCODE_SCHEME: "FrameExtractionTool"
        BUNDLE_ID: "caspernyong.FrameExtractionTool.CMTest"
      xcode: edge
      cocoapods: default
    scripts:
      - name: Get CocoaPods sources
        script: |
          if [ -f "Podfile" ]; then
            pod install
          else
            echo "No Podfile found, skipping CocoaPods installation"
          fi
      - name: Build unsigned archive
        script: |
          set -e
          xcodebuild \
            -project "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -archivePath "build/FrameExtractionTool.xcarchive" \
            archive \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY="" \
            PROVISIONING_PROFILE="" \
            DEVELOPMENT_TEAM="" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID"
      - name: Create unsigned IPA
        script: |
          set -e
          mkdir -p build/Payload
          cp -r "build/FrameExtractionTool.xcarchive/Products/Applications/FrameExtractionTool.app" "build/Payload/"
          cd build
          zip -r "FrameExtractionTool-unsigned.ipa" "Payload/"
          ls -la FrameExtractionTool-unsigned.ipa
      - name: Verify IPA structure
        script: |
          cd build
          unzip -l FrameExtractionTool-unsigned.ipa | head -20
      - name: Create changelog
        script: |
          if [[ -z ${CM_PREVIOUS_COMMIT} ]]; then
            echo "No previous builds found to generate changelog" | tee release_notes.txt
          else
            echo "$(git log --oneline $CM_PREVIOUS_COMMIT..$CM_COMMIT)" | tee release_notes.txt
          fi
    artifacts:
      - build/FrameExtractionTool-unsigned.ipa
      - build/FrameExtractionTool.xcarchive
      - /tmp/xcodebuild_logs/*.log
    publishing:
      scripts:
        - name: Discord notification
          script: |
            set -ex
            
            # Get artifact link for the IPA file
            APP_LINK=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name | contains("FrameExtractionTool-unsigned.ipa")) | .url // "No artifact link available"')
            
            # Get first 7 digits of commit number
            COMMIT=$(echo "${CM_COMMIT}" | sed 's/^\(........\).*/\1/;q')
            
            # Get commit message
            COMMIT_MESSAGE=$(git log --format=%B -n 1 $CM_COMMIT)
            
            # Get commit author
            AUTHOR=$(git show -s --format='%ae' $CM_COMMIT)
            
            # Get build status
            BUILD_STATUS="âœ… Build Successful"
            
            # Send Discord notification
            curl -H "Content-Type: multipart/form-data" \
              -F 'payload_json={"username" : "FrameExtractionTool-CI", "content": "'"$BUILD_STATUS"' - iOS Unsigned Build\n\n**Commit:** `'"$COMMIT"'`\n\n**Commit message:** '"$COMMIT_MESSAGE"'\n\n**Branch:** '"$CM_BRANCH"'\n\n**Author:** '"$AUTHOR"'\n\n**Build:** '"$CM_BUILD_URL"'\n\n**Artifacts:**\n'"$APP_LINK"'\n"}' \
              -F "file1=@release_notes.txt" \
              $WEBHOOK_URL

  ios-release-workflow:
    name: iOS Release Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: 'v*'
          include: true
    environment:
      groups:
        - discord_credentials
      vars:
        XCODE_WORKSPACE: "FrameExtractionTool.xcodeproj"
        XCODE_SCHEME: "FrameExtractionTool"
        BUNDLE_ID: "caspernyong.FrameExtractionTool.CMTest"
      xcode: latest
      cocoapods: default
    scripts:
      - name: Get CocoaPods sources
        script: |
          if [ -f "Podfile" ]; then
            pod install
          else
            echo "No Podfile found, skipping CocoaPods installation"
          fi
      - name: Build unsigned archive for release
        script: |
          set -e
          # Get version from git tag
          VERSION=${CM_TAG#v}
          echo "Building release version: $VERSION"
          
          xcodebuild \
            -project "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -archivePath "build/FrameExtractionTool-$VERSION.xcarchive" \
            archive \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY="" \
            PROVISIONING_PROFILE="" \
            DEVELOPMENT_TEAM="" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID"
      - name: Create unsigned release IPA
        script: |
          set -e
          VERSION=${CM_TAG#v}
          mkdir -p build/Payload
          cp -r "build/FrameExtractionTool-$VERSION.xcarchive/Products/Applications/FrameExtractionTool.app" "build/Payload/"
          cd build
          zip -r "FrameExtractionTool-$VERSION-unsigned.ipa" "Payload/"
          ls -la FrameExtractionTool-$VERSION-unsigned.ipa
      - name: Verify release IPA structure
        script: |
          cd build
          VERSION=${CM_TAG#v}
          unzip -l "FrameExtractionTool-$VERSION-unsigned.ipa" | head -20
      - name: Create release changelog
        script: |
          if [[ -z ${CM_PREVIOUS_COMMIT} ]]; then
            echo "Release $CM_TAG" | tee release_notes.txt
            echo "No previous builds found to generate changelog" >> release_notes.txt
          else
            echo "Release $CM_TAG" | tee release_notes.txt
            echo "$(git log --oneline $CM_PREVIOUS_COMMIT..$CM_COMMIT)" >> release_notes.txt
          fi
    artifacts:
      - build/FrameExtractionTool-*-unsigned.ipa
      - build/FrameExtractionTool-*.xcarchive
      - /tmp/xcodebuild_logs/*.log
    publishing:
      scripts:
        - name: Discord release notification
          script: |
            set -ex
            
            # Get version from tag
            VERSION=${CM_TAG#v}
            
            # Get artifact link for the release IPA file
            APP_LINK=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name | contains("FrameExtractionTool-") and contains("-unsigned.ipa")) | .url // "No artifact link available"')
            
            # Get first 7 digits of commit number
            COMMIT=$(echo "${CM_COMMIT}" | sed 's/^\(........\).*/\1/;q')
            
            # Get commit message
            COMMIT_MESSAGE=$(git log --format=%B -n 1 $CM_COMMIT)
            
            # Get commit author
            AUTHOR=$(git show -s --format='%ae' $CM_COMMIT)
            
            # Get build status
            BUILD_STATUS="ðŸš€ Release Build Successful"
            
            # Send Discord notification
            curl -H "Content-Type: multipart/form-data" \
              -F 'payload_json={"username" : "FrameExtractionTool-CI", "content": "'"$BUILD_STATUS"' - iOS Release v'"$VERSION"'\n\n**Release Tag:** `'"$CM_TAG"'`\n\n**Commit:** `'"$COMMIT"'`\n\n**Commit message:** '"$COMMIT_MESSAGE"'\n\n**Branch:** '"$CM_BRANCH"'\n\n**Author:** '"$AUTHOR"'\n\n**Build:** '"$CM_BUILD_URL"'\n\n**Release Artifacts:**\n'"$APP_LINK"'\n"}' \
              -F "file1=@release_notes.txt" \
              $WEBHOOK_URL
